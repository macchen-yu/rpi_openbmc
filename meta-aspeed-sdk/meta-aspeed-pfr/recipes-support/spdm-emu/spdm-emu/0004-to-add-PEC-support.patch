From c7f051caee0c1c4907d862d74c26deb5e4ae9204 Mon Sep 17 00:00:00 2001
From: Kane-Chen-AS <kane_chen@aspeedtech.com>
Date: Wed, 14 Aug 2024 15:20:59 +0800
Subject: [PATCH] to add PEC support

Some hardware or driver don't support PEC. Now, the libmctp-intel will
handle the PEC if the hardware or driver don't support PEC. To configure
libmctp-intel from spdm-emu side for further operation.

Signed-off-by: Kane-Chen-AS <kane_chen@aspeedtech.com>
---
 spdm_emu/spdm_responder_emu/spdm_responder_emu.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/spdm_emu/spdm_responder_emu/spdm_responder_emu.c b/spdm_emu/spdm_responder_emu/spdm_responder_emu.c
index ae8e538..9dd9a65 100644
--- a/spdm_emu/spdm_responder_emu/spdm_responder_emu.c
+++ b/spdm_emu/spdm_responder_emu/spdm_responder_emu.c
@@ -134,7 +134,7 @@ void *platform_mctp_server(void *ctx)
 {
     struct spdm_mctp_ctx *mctp_ctx = ctx;
     struct mctp_binding_smbus *smbus = (struct mctp_binding_smbus *)mctp_ctx->prot;
-    struct mctp_binding_asti3c *i3c = (struct mctp_binding_smbus *)mctp_ctx->prot;
+    struct mctp_binding_asti3c *i3c = (struct mctp_binding_asti3c *)mctp_ctx->prot;
     struct mctp *mctp = mctp_ctx->mctp;
     struct pollfd pfd = { 0 };
     int count = 0;
@@ -323,9 +323,11 @@ bool init_mctp_server()
         (struct mctp_asti3c_pkt_private *)malloc(sizeof(struct mctp_asti3c_pkt_private));
     i3c_private->fd = m_mctp_tx;
     i3c_private->append_pec = true;
+    i3c_private->is_target = true;
     mctp_ctx->prot = (void *)i3c;
     mctp_ctx->priv_binding = i3c_private;
 
+    mctp_asti3c_set_def_data(i3c_private);
     mctp_register_bus(mctp, &i3c->binding, m_mctp_eid);
     mctp_binding_set_tx_enabled(&i3c->binding, true);
     }
